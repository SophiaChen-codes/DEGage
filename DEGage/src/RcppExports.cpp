// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// permtest
double permtest(NumericVector genecount, NumericVector group, CharacterVector levels, int nperms);
RcppExport SEXP _DEGage_permtest(SEXP genecountSEXP, SEXP groupSEXP, SEXP levelsSEXP, SEXP npermsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type genecount(genecountSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type levels(levelsSEXP);
    Rcpp::traits::input_parameter< int >::type nperms(npermsSEXP);
    rcpp_result_gen = Rcpp::wrap(permtest(genecount, group, levels, nperms));
    return rcpp_result_gen;
END_RCPP
}
// DEGage_mean
double DEGage_mean(double r1, double p1, double r2, double p2);
RcppExport SEXP _DEGage_DEGage_mean(SEXP r1SEXP, SEXP p1SEXP, SEXP r2SEXP, SEXP p2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type r1(r1SEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type r2(r2SEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    rcpp_result_gen = Rcpp::wrap(DEGage_mean(r1, p1, r2, p2));
    return rcpp_result_gen;
END_RCPP
}
// DEGage_var
double DEGage_var(double r1, double p1, double r2, double p2);
RcppExport SEXP _DEGage_DEGage_var(SEXP r1SEXP, SEXP p1SEXP, SEXP r2SEXP, SEXP p2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type r1(r1SEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type r2(r2SEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    rcpp_result_gen = Rcpp::wrap(DEGage_var(r1, p1, r2, p2));
    return rcpp_result_gen;
END_RCPP
}
// DEGage_cdf
double DEGage_cdf(double r1, double p1, double r2, double p2, int k);
RcppExport SEXP _DEGage_DEGage_cdf(SEXP r1SEXP, SEXP p1SEXP, SEXP r2SEXP, SEXP p2SEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type r1(r1SEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type r2(r2SEXP);
    Rcpp::traits::input_parameter< double >::type p2(p2SEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(DEGage_cdf(r1, p1, r2, p2, k));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DEGage_permtest", (DL_FUNC) &_DEGage_permtest, 4},
    {"_DEGage_DEGage_mean", (DL_FUNC) &_DEGage_DEGage_mean, 4},
    {"_DEGage_DEGage_var", (DL_FUNC) &_DEGage_DEGage_var, 4},
    {"_DEGage_DEGage_cdf", (DL_FUNC) &_DEGage_DEGage_cdf, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_DEGage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
